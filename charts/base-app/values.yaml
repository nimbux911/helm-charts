
deployment:
#  labels:
#    foo: bar
#    foo2: bar2
#  annotations:
#    annFoo: annBar
#    annFoo2: annBar2
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxSurge: 26%
#      maxUnavailable: 26%
#  revisionHistoryLimit: 11
  replicas: 1

pod:
#  labels:
#    podFoo: podFoo
#    podFoo2: podFoo2
#  annotations:
#    podAnnFoo: podAnnFoo
#    podAnnFoo2: podAnnFoo2  
#  nodeSelector:
#    selectorFoo: selectorBar
#  tolerations:
#    - key: ""
#      operator: ""
#      value: ""
#      effect: ""

#  restartPolicy: Never
#  hostAliases:
#    - hostnames:
#        - name1.com
#        - name2.com
#      ip: "8.8.8.8"

#  serviceAccount: amazingServiceAccount

#  imagePullSecrets:
#    - name: dockerhub.com
  
#  volumes:
#    - name: "volume1"
#      persistentVolumeClaim:
#        claimName: "pvcname"
#        readOnly: true
#    - name: "volume2"
#      configMap:
#        name: amazingCm
#        optional: false
#        defaultMode: 0777
#        items:
#          - key: ""
#            path: ""
#            mode: 0777
#    - name: volume3
#      secret:
#        secretName: amazingSecret
#        optional: bool
#        defaultMode: 0777
#        items:
#          - key: ""
#            path: ""
#            mode: 0777

  containers:
    - name: nginx
      image: nginx
#      imagePullPolicy: Always
#      command:
#        - ""
#      args:
#        - ""
#      workingDir: /root
      ports:
        - containerPort: 80
          name: http
          protocol: TCP
#      env:
#        - name: containerFoo
#          value: containerBar
#        - name: cmVar
#          valueFrom: 
#            configMapKeyRef:
#              name: cm1
#              key: key2
#      volumeMounts:
#        - mountPath: ""
#          name: ""
#          readOnly: bool
#          subPath: ""
#        - mountPath: ""
#          name: ""
#          readOnly: bool
#          subPathExpr: ""
#      resources:
#        requests:
#          cpu: 50m
#          memory: 128Mi
#        limits:
#          cpu: 250m
#          memory: 512Mi
#      readinessProbe: # the same for readiness and startup
#        httpGet:
#          port: http
#          httpHeaders:
#            - name: ""
#              value: ""
#          path: /to/path
#          scheme: http
#          initialDelaySeconds: 10
#          terminationGracePeriodSeconds: 0
#          periodSeconds: 5
#          timeoutSeconds: 5
#          failureThreshold: 5
#          successThreshold: 5
#          grpc:
#            port: 0
#            service: ""
#      securityContext:
#        runAsUser: 0
#        runAsNonRoot: bool
#        privileged: bool

service:
  enabled: true
  type: ClusterIP 
#  type: NodePort
#  labels:
#    foo: bar
#  annotations:
#    foo: bar
  ports:
    - name: http
      port: 8080
      targetPort: http
#    - name: https
#      port: 443
#      targetPort: https
#      nodePort: 35012

ingress:
  enabled: false
#  labels:
#    foo: bar
#  annotations:
#    foo: bar
#  defaultBackend:
#    name: ""
#    port: 0
#  className: nginx
#  rules:
#    - host: "example.com"
#      servicePortName: http
#    - path: "/test"
#      pathType: "Exact"
#      servicePortName: http
#      servicePort: 8080
#  tls:
#    hosts:
#      - example.com
#    secretName: secret-name

hpa:
  enabled: false
#  labels:
#    foo: bar
#  annotations:
#    foo: bar
#  min: 1
#  max: 5
#  behavior:
#    scaleDown:
#      policies:
#        - type: ""
#          value: ""
#          periodSeconds: 0
#      selectPolicy: ""
#      stabilizationWindowSeconds: 0
#    scaleUp:
#      policies:
#        - type: ""
#          value: ""
#          periodSeconds: 0
#      selectPolicy: ""
#      stabilizationWindowSeconds: 0
#  metrics:
#    - type: ContainerResource
#      containerResource:
#        container: ""
#        name: ""
#        target: 
#          averageUtilization: 0
#          averageValue: ""
#          type: ""
#          value: ""
#    - type: External
#      external:
#        metric:
#          name: ""
#          selector:
#            foo: bar
#        target: 
#          averageUtilization: 0
#          averageValue: ""
#          type: ""
#          value: ""
#    - type: Object
#      object:
#        describedObject: 
#          apiVersion: ""
#          kind: ""
#          name: ""
#        metric:
#          name: ""
#          selector:
#            foo: bar
#        target: 
#          averageUtilization: 0
#          averageValue: ""
#          type: ""
#          value: ""
#    - type: Pods
#      pods:
#        metric:
#          name: ""
#          selector:
#            foo: bar
#        target: 
#          averageUtilization: 0
#          averageValue: ""
#          type: ""
#          value: ""
#    - type: Resource
#      resource:
#        name: ""
#        target: 
#          averageUtilization: 0
#          averageValue: ""
#          type: ""
#          value: ""
pdb:
  enabled: false
#  labels:
#    foo: bar
#  annotations:
#    foo: bar
#  minAvailable: 50%
#  maxUnavailable: 0
#  unhealthyPodEvictionPolicy: AlwaysAllow

#configmaps:
#  - name: cm1
#    labels:
#      foo: bar
#    annotations:
#      foo: bar
#    immutable: false 
#    data:
#      key1: |
#        my awesome
#        multiline
#        string
#      key2: my-awesome-config
#  - name: binaryTest
#    binaryData:
#      key3: |
#        another
#        multiline
#        string
#      key4: another-awesome-config

#secrets:
#  - name: secret1
#    labels:
#      foo: bar
#    annotations:
#      foo: bar
#    immutable: false 
#    data:
#      key1: |
#        my awesome
#        multiline
#        string
#      key2: my-super-secret-value
#  - name: stringData
#    stringData:
#      key3: |
#        another
#        multiline
#        string
#      key4: another-super-secret-value
#    type: "kubernetes.io/dockerconfigjson"